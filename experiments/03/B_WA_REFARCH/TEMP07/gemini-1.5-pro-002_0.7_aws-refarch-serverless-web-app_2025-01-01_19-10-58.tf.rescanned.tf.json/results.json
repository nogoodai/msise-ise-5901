{
	"kics_version": "development",
	"files_scanned": 1,
	"lines_scanned": 458,
	"files_parsed": 1,
	"lines_parsed": 456,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 1088,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 3,
		"LOW": 3,
		"MEDIUM": 3,
		"TRACE": 0
	},
	"total_counter": 9,
	"total_bom_resources": 0,
	"start": "2025-02-03T21:21:10.8989299-06:00",
	"end": "2025-02-03T21:21:21.160370349-06:00",
	"paths": [
		"gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
		"/home/lj/kics/assets/queries/"
	],
	"queries": [
		{
			"query_name": "CloudWatch Log Group Without KMS",
			"query_id": "0afbcfe9-d341-4b92-a64c-7e6de0543879",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"cwe": "311",
			"cloud_provider": "AWS",
			"category": "Encryption",
			"experimental": false,
			"description": "AWS CloudWatch Log groups should be encrypted using KMS",
			"description_id": "4258abe6",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "e21e02b873b1c1e18adf948ca61fd5d312a15c971fd00cfd3b327b7a14a1046d",
					"line": 183,
					"resource_type": "aws_cloudwatch_log_group",
					"resource_name": "/aws/apigateway/${aws_apigatewayv2_api.main.name}/access_logs",
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudwatch_log_group[api_gw]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Attribute 'kms_key_id' should be set",
					"actual_value": "Attribute 'kms_key_id' is undefined"
				}
			]
		},
		{
			"query_name": "S3 Bucket Logging Disabled",
			"query_id": "f861041c-8c9f-4156-acfc-5e6e524f5884",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"cwe": "778",
			"cloud_provider": "AWS",
			"category": "Observability",
			"experimental": false,
			"description": "Server Access Logging should be enabled on S3 Buckets so that all changes are logged and trackable",
			"description_id": "fa5c7c72",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "76be0298b7aa90ff7431e7ac74181a77eccab9a3bfeec6c433afe98b77a5ad16",
					"line": 367,
					"resource_type": "aws_s3_bucket",
					"resource_name": "todo-app-todo-app-s3-bucket-logs",
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[log_bucket]",
					"search_line": 367,
					"search_value": "",
					"expected_value": "'logging' should be defined and not null",
					"actual_value": "'logging' is undefined or null"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Versioning",
			"query_id": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Backup",
			"experimental": false,
			"description": "S3 bucket should have versioning enabled",
			"description_id": "7614ce3b",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "37c28194c6daf439777bf3b0388555e7291a1f15d001d95b28f0cd2caf37f2c2",
					"line": 367,
					"resource_type": "aws_s3_bucket",
					"resource_name": "todo-app-todo-app-s3-bucket-logs",
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[log_bucket]",
					"search_line": 367,
					"search_value": "",
					"expected_value": "'versioning' should be true",
					"actual_value": "'versioning' is undefined or null"
				}
			]
		},
		{
			"query_name": "Cognito UserPool Without MFA",
			"query_id": "ec28bf61-a474-4dbe-b414-6dd3a067d6f0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool",
			"severity": "LOW",
			"platform": "Terraform",
			"cwe": "284",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "AWS Cognito UserPool should have MFA (Multi-Factor Authentication) defined to users",
			"description_id": "17f77319",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "700b568816b26b1e53441fc229fb0ada8e429bd96640fcc97c4f88d4c1320d8f",
					"line": 62,
					"resource_type": "aws_cognito_user_pool",
					"resource_name": "todo-app-todo-app-user-pool",
					"issue_type": "IncorrectValue",
					"search_key": "aws_cognito_user_pool[main]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_cognito_user_pool[main].mfa_configuration should be set to 'ON' or 'OPTIONAL",
					"actual_value": "aws_cognito_user_pool[main].mfa_configuration is set to 'OFF'"
				}
			]
		},
		{
			"query_name": "IAM Access Analyzer Not Enabled",
			"query_id": "e592a0c5-5bdb-414c-9066-5dba7cdea370",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/accessanalyzer_analyzer",
			"severity": "LOW",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions",
			"description_id": "d03e85ae",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "aa346cd1642a83b40e221f96a43d88dbfacecdf1f8e5314c24145f8d35530197",
					"line": 62,
					"resource_type": "n/a",
					"resource_name": "n/a",
					"issue_type": "MissingAttribute",
					"search_key": "resource",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'aws_accessanalyzer_analyzer' should be set",
					"actual_value": "'aws_accessanalyzer_analyzer' is undefined"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Enabled MFA Delete",
			"query_id": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#mfa_delete",
			"severity": "LOW",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "S3 bucket without MFA Delete Enabled. MFA delete cannot be enabled through Terraform, it can be done by adding a MFA device (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable.html) and enabling versioning and MFA delete by using AWS CLI: 'aws s3api put-bucket-versioning --versioning-configuration=Status=Enabled,MFADelete=Enabled --bucket=\u003cBUCKET_NAME\u003e --mfa=\u003cMFA_SERIAL_NUMBER\u003e'. Please, also notice that MFA delete can not be used with lifecycle configurations",
			"description_id": "e1699d08",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "d21009f3a82e9fb8c61ac0a12bec97a7557b4f92d1bddf83c5d27266f38523b8",
					"line": 345,
					"resource_type": "aws_s3_bucket",
					"resource_name": "todo-app-todo-app-s3-bucket",
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[main].versioning",
					"search_line": 345,
					"search_value": "",
					"expected_value": "'mfa_delete' should be set to true",
					"actual_value": "'mfa_delete' is undefined or null"
				}
			]
		},
		{
			"query_name": "DynamoDB Table Point In Time Recovery Disabled",
			"query_id": "741f1291-47ac-4a85-a07b-3d32a9d6bd3e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "754",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "It's considered a best practice to have point in time recovery enabled for DynamoDB Table",
			"description_id": "205ac3d1",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "ee3c9ba5671f68feb5aeb6b5edb51414f40f7d1676ff4915d152779cc01a77ea",
					"line": 122,
					"resource_type": "aws_dynamodb_table",
					"resource_name": "aws_dynamodb_table",
					"issue_type": "IncorrectValue",
					"search_key": "aws_dynamodb_table[{{main}}].point_in_time_recovery.enabled",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_dynamodb_table.point_in_time_recovery.enabled should be set to true",
					"actual_value": "aws_dynamodb_table.point_in_time_recovery.enabled is set to false",
					"remediation": "{\"after\":\"true\",\"before\":\"false\"}",
					"remediation_type": "replacement"
				}
			]
		},
		{
			"query_name": "Resource Not Using Tags",
			"query_id": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/resource-tagging",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "665",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'",
			"description_id": "09db2d52",
			"files": [
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "36414a4f8403640538de42f9f9b3cdd6b4bbbe76c931f7c66c6da0bb17833784",
					"line": 183,
					"resource_type": "aws_cloudwatch_log_group",
					"resource_name": "/aws/apigateway/${aws_apigatewayv2_api.main.name}/access_logs",
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudwatch_log_group[{{api_gw}}]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_cloudwatch_log_group[{{api_gw}}].tags should be defined and not null",
					"actual_value": "aws_cloudwatch_log_group[{{api_gw}}].tags is undefined or null"
				},
				{
					"file_name": "gemini-1.5-pro-002_0.7_aws-refarch-serverless-web-app_2025-01-01_19-10-58.tf.rescanned.tf",
					"similarity_id": "271d4facc064abf079fd47b402c06bdbd15edb5e77c7d04c2095653e4bc1415b",
					"line": 367,
					"resource_type": "aws_s3_bucket",
					"resource_name": "log_bucket",
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[{{log_bucket}}]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_s3_bucket[{{log_bucket}}].tags should be defined and not null",
					"actual_value": "aws_s3_bucket[{{log_bucket}}].tags is undefined or null"
				}
			]
		}
	]
}
